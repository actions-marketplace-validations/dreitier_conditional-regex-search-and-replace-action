name: 'Conditional regex search and replace'
author: 'Christopher Klein'
description: 'Executes conditional search and replace operations on a set of files. Strings are replaced by matching regular expressions.'
inputs:
  mappings:
    description: 'DSL to define search-and-replace operations'
    required: true
  directory:
    description: 'Directory, in which to operate. By default, the base directory is used'
    required: false
  dump:
    description: 'If `1`, it dumps the provided configuration'
    required: false
  if_well_known_vars_missing_fail:
    description: "If 1, it fails with exit code `2` if none of docker_image_tag, git_branch or git_tag is provided "
    required: false
  if_no_match_fail:
    description: 'If the action has not modified any file and `if_no_match_fail` is `1`, it will fail with exit code `3`'
    required: false
  updated_file_suffix:
    description: 'If set, any changes will be written to another file the path of the original file and that suffix'
    required: false
  register_custom_regexes:
    description: 'A comma-separated list of custom regular expressions to register'
    required: false
  register_custom_variables:
    description: 'A comma-separated list of custom variables to register'
    required: false
  commit:
    description: 'If there has been any modified files (see below, `outputs.total_modified_files`), it will commit the changes to the Git repository'
    required: false
  commit_template:
    description: 'Template to use for the commit message. You can use the [Blade template engine](https://laravel.com/docs/9.x/blade) to dynamically specify the message.'
    required: false
  committer_name:
    description: 'Name of committer if `commit` is present'
    required: false
  committer_email:
    description: ' E-mail of committer if `commit` is present '
    required: false
  docker_image_tag:
    description: 'Docker image tag created by upstream repository'
    required: false
  docker_image_tag_regex:
    description: 'Regular expression to modify occurences of Docker image tags in globbed files'
    required: false
  git_tag:
    description: 'Git tag created by upstream repository'
    required: false
  git_tag_regex:
    description: 'Regular expression to modify occurences of Git tags in globbed files'
    required: false
  git_branch:
    description: 'Git branch modified in upstream repository'
    required: false
  git_branch_regex:
    description: 'Regular expression to modify occurences of Git branch in globbed files'
    required: false
outputs:
  total_modified_files:
    description: 'Number of modified (target) files'

runs:
  using: 'docker'
  image: 'Dockerfile'
